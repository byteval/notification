// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/notifications": {
            "post": {
                "description": "Создает новое уведомление",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Создать уведомление",
                "parameters": [
                    {
                        "description": "Данные уведомления",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/create.Request"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/create.Response"
                        }
                    }
                }
            }
        },
        "/notifications/{id}": {
            "get": {
                "description": "Возвращает уведомление по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notifications"
                ],
                "summary": "Получить уведомление",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID уведомления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/get.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "create.Request": {
            "description": "Модель запроса для создания уведомления",
            "type": "object",
            "required": [
                "channel",
                "message",
                "recipient",
                "subject"
            ],
            "properties": {
                "channel": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "maxLength": 1000
                },
                "recipient": {
                    "type": "string",
                    "maxLength": 255
                },
                "subject": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "create.Response": {
            "description": "Стандартный ответ API",
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "get.Response": {
            "type": "object",
            "properties": {
                "channel": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{"http", "https"},
	Title:            "Notification Service API",
	Description:      "API сервиса уведомлений",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
